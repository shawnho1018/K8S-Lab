---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring-heapster
  namespace: kube-instrumentation
  labels:
    app: heapster
    function: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: heapster-clusteradmin-role
  labels:
    app: heapster
    function: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: monitoring-heapster
  namespace: kube-instrumentation
---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-heapster
  namespace: kube-instrumentation
  labels:
    app: heapster
    function: monitoring
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: heapster
spec:
  ports:
  - port: 80
    targetPort: 8082
  selector:
    app: heapster
    function: monitoring

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-heapster
  namespace: kube-instrumentation
  labels:
    app: heapster
    function: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: heapster
      function: monitoring
  template:
    metadata:
      labels:
        app: heapster
        function: monitoring
    spec:
      serviceAccountName: monitoring-heapster
      containers:
      - name: heapster
        image: gcr.io/google_containers/heapster-amd64:v1.3.0
        imagePullPolicy: IfNotPresent
        command:
        - /heapster
        - --source=kubernetes.summary_api:https://kubernetes.default.svc?kubeletHttps=true&kubeletPort=10250&insecure=true
        - --sink=influxdb:http://monitoring-influxdb.kube-instrumentation.svc:8086
        - --sink=elasticsearch:http://es-k8s-logging.kube-instrumentation.svc:9200?sniff=false&healthCheck=false&esUserName=elastic&esUserSecret=changeme
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: influxdb
    function: monitoring
  name: monitoring-influxdb
  namespace: kube-instrumentation
spec:
  ports:
  - port: 8086
    targetPort: 8086
  selector:
    app: influxdb
    function: monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-influxdb
  namespace: kube-instrumentation
  labels:
    app: influxdb
    function: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
      function: monitoring
  template:
    metadata:
     labels:
       app: influxdb
       function: monitoring
    spec:
      containers:
      - name: influxdb
        image: gcr.io/google_containers/heapster-influxdb-amd64:v1.1.1
        volumeMounts:
        - mountPath: /data
          name: influxdb-storage
      volumes:
      - name: influxdb-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-grafana
  labels:
    app: grafana
    function: monitoring
  namespace: kube-instrumentation
spec:
  type: ClusterIP 
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  selector:
    app: grafana
    function: monitoring
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: instrumentation-ingress
  namespace: kube-instrumentation
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /kibana/?(.*)
        backend:
          serviceName: kibana-k8s-logging
          servicePort: 80
      - path: /grafana/?(.*)
        backend:
          serviceName: monitoring-grafana
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-grafana
  namespace: kube-instrumentation
  labels:
    app: grafana
    function: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      function: monitoring
  template:
    metadata:
      labels:
        app: grafana
        function: monitoring
    spec:
      containers:
      - name: grafana
        image: gcr.io/google_containers/heapster-grafana-amd64:v4.4.1
        ports:
        - containerPort: 3000
          protocol: TCP
        volumeMounts:
        - mountPath: /var
          name: grafana-storage
        env:
        - name: INFLUXDB_HOST
          value: monitoring-influxdb
        - name: GF_SERVER_HTTP_PORT
          value: "3000"
          # The following env variables are required to make Grafana accessible via
          # the kubernetes api-server proxy. On production clusters, we recommend
          # removing these env variables, setup auth for grafana, and expose the grafana
          # service using a LoadBalancer or a public IP.
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        - name: GF_INSTALL_PLUGINS
          value: raintank-kubernetes-app
        - name: GF_SERVER_ROOT_URL
          value: "/grafana/"
      volumes:
      - name: grafana-storage
        emptyDir: {}
